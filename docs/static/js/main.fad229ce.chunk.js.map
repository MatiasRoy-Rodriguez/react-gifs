{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAE7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OAEE,sBAAMC,SAba,SAACC,GACrBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAQd,SACC,uBACCO,KAAK,OACLC,MAAOT,EACPU,SArBsB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,a,+BCNZG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UAAUH,GAF3C,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVf,kBAcdM,GAdc,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAExC,OACC,sBAAKc,UAAU,yCAAf,UACC,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHMO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEzB,ECF2B,SAAEA,GAE7B,MAA0Bd,mBAAS,CAClCqB,KAAM,GACNa,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,oBAAS,sBAAE,sBAAAtB,EAAA,sDAEVF,EAASC,GACPwB,MAAM,SAAAC,GACNH,EAAS,CACRf,KAAMkB,EACNL,SAAS,OANF,2CASR,CAAEpB,IAIEqB,EDlB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAIrB,OACC,qCACC,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OAECoB,GAAY,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,aAAf,SAEEH,EAAOJ,KAAI,SAAAC,GAAG,OACb,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEhBHgB,EAAe,WAG3B,MAAoCzC,mBAAS,CAAC,WAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAIA,OACC,qCACC,yCAEA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEE2C,EAAWnB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCfX6B,IAASC,OAER,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fad229ce.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories}) => {\r\n\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif ( inputValue.trim().length > 2){\r\n\t\t\tsetCategories( cats => [ inputValue, ...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\r\n\t)\r\n}\r\n\r\nAddCategory.propTypes ={\r\n\tsetCategories:PropTypes.func.isRequired\t\r\n}","\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n\t\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=XhcZPk8o4iL3wBdOrij0jq78h2qwXXE9`;\r\n\t\tconst resp = await fetch(url);\r\n\t\tconst { data } = await resp.json();\r\n\r\n\t\tconst gifs = data.map(img => {\r\n\t\t\treturn {\r\n\t\t\t\tid: img.id,\r\n\t\t\t\ttitle: img.title,\r\n\t\t\t\turl: img.images?.downsized_medium.url\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn gifs;\r\n\t}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\tconst { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n\r\n\t\t\t{loading  && <p className=\"animate__animated animate__flash\">Loading</p>}\t\r\n\r\n\t\t\t<div className=\"card-grid \">\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map(img => (\r\n\t\t\t\t\t\t<GifGridItem\r\n\t\t\t\t\t\t\tkey={img.id}\r\n\t\t\t\t\t\t\t{...img} />\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n","import { useEffect, useState } from \"react\"\r\n\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t});\r\n\r\n\tuseEffect( async () => {\r\n\r\n\t\tgetGifs( category )\r\n\t\t\t.then( imgs => {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t}, [ category ])\r\n\r\n\r\n\r\n\treturn state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n\tconst [categories, setCategories] = useState(['Fiumba'])\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Gif App</h2>\r\n\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\r\n\t\t\t<hr />\r\n\r\n\t\t\t<ol>\r\n\t\t\t\t{\r\n\t\t\t\t\tcategories.map(category =>\r\n\t\t\t\t\t(<GifGrid\r\n\t\t\t\t\t\tkey={category}\r\n\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t/>)\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</ol>\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n\n\t<GifExpertApp />,\n\tdocument.getElementById('root')\n);\n\n"],"sourceRoot":""}